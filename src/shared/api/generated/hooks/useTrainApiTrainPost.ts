/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '@kubb/plugin-client/clients/axios'
import type { RequestConfig, ResponseErrorConfig } from '@kubb/plugin-client/clients/axios'
import type { UseMutationOptions, QueryClient } from '@tanstack/react-query'
import type { TrainApiTrainPostMutationResponse } from '../types/TrainApiTrainPost.ts'
import { useMutation } from '@tanstack/react-query'
import { trainApiTrainPost } from '../clients/trainApiTrainPost.ts'

export const trainApiTrainPostMutationKey = () => [{ url: '/api/train' }] as const

export type TrainApiTrainPostMutationKey = ReturnType<typeof trainApiTrainPostMutationKey>

/**
 * @summary Train
 * {@link /api/train}
 */
export function useTrainApiTrainPost<TContext>(
  options: {
    mutation?: UseMutationOptions<TrainApiTrainPostMutationResponse, ResponseErrorConfig<Error>, void, TContext> & { client?: QueryClient }
    client?: Partial<RequestConfig> & { client?: typeof client }
  } = {},
) {
  const { mutation = {}, client: config = {} } = options ?? {}
  const { client: queryClient, ...mutationOptions } = mutation
  const mutationKey = mutationOptions.mutationKey ?? trainApiTrainPostMutationKey()

  return useMutation<TrainApiTrainPostMutationResponse, ResponseErrorConfig<Error>, void, TContext>(
    {
      mutationFn: async () => {
        return trainApiTrainPost(config)
      },
      mutationKey,
      ...mutationOptions,
    },
    queryClient,
  )
}