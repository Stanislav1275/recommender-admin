/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '@kubb/plugin-client/clients/axios'
import type { RequestConfig, ResponseErrorConfig } from '@kubb/plugin-client/clients/axios'
import type { QueryKey, QueryClient, UseSuspenseQueryOptions, UseSuspenseQueryResult } from '@tanstack/react-query'
import type {
  GetConfigLogsApiAdminConfigsConfigIdLogsGetQueryResponse,
  GetConfigLogsApiAdminConfigsConfigIdLogsGetPathParams,
  GetConfigLogsApiAdminConfigsConfigIdLogsGetQueryParams,
  GetConfigLogsApiAdminConfigsConfigIdLogsGet404,
  GetConfigLogsApiAdminConfigsConfigIdLogsGet422,
  GetConfigLogsApiAdminConfigsConfigIdLogsGet500,
} from '../types/GetConfigLogsApiAdminConfigsConfigIdLogsGet.ts'
import { queryOptions, useSuspenseQuery } from '@tanstack/react-query'
import { getConfigLogsApiAdminConfigsConfigIdLogsGet } from '../clients/getConfigLogsApiAdminConfigsConfigIdLogsGet.ts'

export const getConfigLogsApiAdminConfigsConfigIdLogsGetSuspenseQueryKey = (
  config_id: GetConfigLogsApiAdminConfigsConfigIdLogsGetPathParams['config_id'],
  params?: GetConfigLogsApiAdminConfigsConfigIdLogsGetQueryParams,
) => [{ url: '/api/admin/configs/:config_id/logs', params: { config_id: config_id } }, ...(params ? [params] : [])] as const

export type GetConfigLogsApiAdminConfigsConfigIdLogsGetSuspenseQueryKey = ReturnType<typeof getConfigLogsApiAdminConfigsConfigIdLogsGetSuspenseQueryKey>

export function getConfigLogsApiAdminConfigsConfigIdLogsGetSuspenseQueryOptions(
  config_id: GetConfigLogsApiAdminConfigsConfigIdLogsGetPathParams['config_id'],
  params?: GetConfigLogsApiAdminConfigsConfigIdLogsGetQueryParams,
  config: Partial<RequestConfig> & { client?: typeof client } = {},
) {
  const queryKey = getConfigLogsApiAdminConfigsConfigIdLogsGetSuspenseQueryKey(config_id, params)
  return queryOptions<
    GetConfigLogsApiAdminConfigsConfigIdLogsGetQueryResponse,
    ResponseErrorConfig<
      GetConfigLogsApiAdminConfigsConfigIdLogsGet404 | GetConfigLogsApiAdminConfigsConfigIdLogsGet422 | GetConfigLogsApiAdminConfigsConfigIdLogsGet500
    >,
    GetConfigLogsApiAdminConfigsConfigIdLogsGetQueryResponse,
    typeof queryKey
  >({
    enabled: !!config_id,
    queryKey,
    queryFn: async ({ signal }) => {
      config.signal = signal
      return getConfigLogsApiAdminConfigsConfigIdLogsGet(config_id, params, config)
    },
  })
}

/**
 * @description Получить логи выполнения конфигурации
 * @summary Get Config Logs
 * {@link /api/admin/configs/:config_id/logs}
 */
export function useGetConfigLogsApiAdminConfigsConfigIdLogsGetSuspense<
  TData = GetConfigLogsApiAdminConfigsConfigIdLogsGetQueryResponse,
  TQueryKey extends QueryKey = GetConfigLogsApiAdminConfigsConfigIdLogsGetSuspenseQueryKey,
>(
  config_id: GetConfigLogsApiAdminConfigsConfigIdLogsGetPathParams['config_id'],
  params?: GetConfigLogsApiAdminConfigsConfigIdLogsGetQueryParams,
  options: {
    query?: Partial<
      UseSuspenseQueryOptions<
        GetConfigLogsApiAdminConfigsConfigIdLogsGetQueryResponse,
        ResponseErrorConfig<
          GetConfigLogsApiAdminConfigsConfigIdLogsGet404 | GetConfigLogsApiAdminConfigsConfigIdLogsGet422 | GetConfigLogsApiAdminConfigsConfigIdLogsGet500
        >,
        TData,
        TQueryKey
      >
    > & { client?: QueryClient }
    client?: Partial<RequestConfig> & { client?: typeof client }
  } = {},
) {
  const { query: { client: queryClient, ...queryOptions } = {}, client: config = {} } = options ?? {}
  const queryKey = queryOptions?.queryKey ?? getConfigLogsApiAdminConfigsConfigIdLogsGetSuspenseQueryKey(config_id, params)

  const query = useSuspenseQuery(
    {
      ...(getConfigLogsApiAdminConfigsConfigIdLogsGetSuspenseQueryOptions(config_id, params, config) as unknown as UseSuspenseQueryOptions),
      queryKey,
      ...(queryOptions as unknown as Omit<UseSuspenseQueryOptions, 'queryKey'>),
    },
    queryClient,
  ) as UseSuspenseQueryResult<
    TData,
    ResponseErrorConfig<
      GetConfigLogsApiAdminConfigsConfigIdLogsGet404 | GetConfigLogsApiAdminConfigsConfigIdLogsGet422 | GetConfigLogsApiAdminConfigsConfigIdLogsGet500
    >
  > & { queryKey: TQueryKey }

  query.queryKey = queryKey as TQueryKey

  return query
}