/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '@kubb/plugin-client/clients/axios'
import type { RequestConfig, ResponseErrorConfig } from '@kubb/plugin-client/clients/axios'
import type { UseMutationOptions, QueryClient } from '@tanstack/react-query'
import type {
  UpdateConfigApiAdminConfigsConfigIdPutMutationRequest,
  UpdateConfigApiAdminConfigsConfigIdPutMutationResponse,
  UpdateConfigApiAdminConfigsConfigIdPutPathParams,
  UpdateConfigApiAdminConfigsConfigIdPut400,
  UpdateConfigApiAdminConfigsConfigIdPut404,
  UpdateConfigApiAdminConfigsConfigIdPut422,
  UpdateConfigApiAdminConfigsConfigIdPut500,
} from '../types/UpdateConfigApiAdminConfigsConfigIdPut.ts'
import { useMutation } from '@tanstack/react-query'
import { updateConfigApiAdminConfigsConfigIdPut } from '../clients/updateConfigApiAdminConfigsConfigIdPut.ts'

export const updateConfigApiAdminConfigsConfigIdPutMutationKey = () => [{ url: '/api/admin/configs/{config_id}' }] as const

export type UpdateConfigApiAdminConfigsConfigIdPutMutationKey = ReturnType<typeof updateConfigApiAdminConfigsConfigIdPutMutationKey>

/**
 * @description Обновить конфигурацию
 * @summary Update Config
 * {@link /api/admin/configs/:config_id}
 */
export function useUpdateConfigApiAdminConfigsConfigIdPut<TContext>(
  options: {
    mutation?: UseMutationOptions<
      UpdateConfigApiAdminConfigsConfigIdPutMutationResponse,
      ResponseErrorConfig<
        | UpdateConfigApiAdminConfigsConfigIdPut400
        | UpdateConfigApiAdminConfigsConfigIdPut404
        | UpdateConfigApiAdminConfigsConfigIdPut422
        | UpdateConfigApiAdminConfigsConfigIdPut500
      >,
      { config_id: UpdateConfigApiAdminConfigsConfigIdPutPathParams['config_id']; data: UpdateConfigApiAdminConfigsConfigIdPutMutationRequest },
      TContext
    > & { client?: QueryClient }
    client?: Partial<RequestConfig<UpdateConfigApiAdminConfigsConfigIdPutMutationRequest>> & { client?: typeof client }
  } = {},
) {
  const { mutation = {}, client: config = {} } = options ?? {}
  const { client: queryClient, ...mutationOptions } = mutation
  const mutationKey = mutationOptions.mutationKey ?? updateConfigApiAdminConfigsConfigIdPutMutationKey()

  return useMutation<
    UpdateConfigApiAdminConfigsConfigIdPutMutationResponse,
    ResponseErrorConfig<
      | UpdateConfigApiAdminConfigsConfigIdPut400
      | UpdateConfigApiAdminConfigsConfigIdPut404
      | UpdateConfigApiAdminConfigsConfigIdPut422
      | UpdateConfigApiAdminConfigsConfigIdPut500
    >,
    { config_id: UpdateConfigApiAdminConfigsConfigIdPutPathParams['config_id']; data: UpdateConfigApiAdminConfigsConfigIdPutMutationRequest },
    TContext
  >(
    {
      mutationFn: async ({ config_id, data }) => {
        return updateConfigApiAdminConfigsConfigIdPut(config_id, data, config)
      },
      mutationKey,
      ...mutationOptions,
    },
    queryClient,
  )
}