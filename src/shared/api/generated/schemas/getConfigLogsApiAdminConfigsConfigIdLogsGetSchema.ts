/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import { configExecutionLogSchema } from './configExecutionLogSchema.ts'
import { errorResponseSchema } from './errorResponseSchema.ts'
import { HTTPValidationErrorSchema } from './HTTPValidationErrorSchema.ts'
import { z } from 'zod'

export const getConfigLogsApiAdminConfigsConfigIdLogsGetPathParamsSchema = z.object({
  config_id: z.string(),
})

export const getConfigLogsApiAdminConfigsConfigIdLogsGetQueryParamsSchema = z.object({
  skip: z.coerce.number().int().default(0),
  limit: z.coerce.number().int().default(100),
})

/**
 * @description Логи конфигурации
 */
export const getConfigLogsApiAdminConfigsConfigIdLogsGet200Schema = z.array(z.lazy(() => configExecutionLogSchema).describe('Лог выполнения конфигурации'))

/**
 * @description Конфигурация не найдена
 */
export const getConfigLogsApiAdminConfigsConfigIdLogsGet404Schema = z.lazy(() => errorResponseSchema).describe('Стандартизированный ответ с ошибкой')

/**
 * @description Validation Error
 */
export const getConfigLogsApiAdminConfigsConfigIdLogsGet422Schema = z.lazy(() => HTTPValidationErrorSchema)

/**
 * @description Внутренняя ошибка сервера
 */
export const getConfigLogsApiAdminConfigsConfigIdLogsGet500Schema = z.lazy(() => errorResponseSchema).describe('Стандартизированный ответ с ошибкой')

export const getConfigLogsApiAdminConfigsConfigIdLogsGetQueryResponseSchema = z.lazy(() => getConfigLogsApiAdminConfigsConfigIdLogsGet200Schema)