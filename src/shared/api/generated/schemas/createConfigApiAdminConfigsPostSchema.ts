/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import { configResponseSchema } from './configResponseSchema.ts'
import { errorResponseSchema } from './errorResponseSchema.ts'
import { HTTPValidationErrorSchema } from './HTTPValidationErrorSchema.ts'
import { recommendationConfigSchema } from './recommendationConfigSchema.ts'
import { z } from 'zod'

/**
 * @description Successful Response
 */
export const createConfigApiAdminConfigsPost200Schema = z.lazy(() => configResponseSchema).describe('Ответ с конфигурацией')

/**
 * @description Конфигурация создана
 */
export const createConfigApiAdminConfigsPost201Schema = z.any()

/**
 * @description Неверные данные
 */
export const createConfigApiAdminConfigsPost400Schema = z.lazy(() => errorResponseSchema).describe('Стандартизированный ответ с ошибкой')

/**
 * @description Validation Error
 */
export const createConfigApiAdminConfigsPost422Schema = z.lazy(() => HTTPValidationErrorSchema)

/**
 * @description Внутренняя ошибка сервера
 */
export const createConfigApiAdminConfigsPost500Schema = z.lazy(() => errorResponseSchema).describe('Стандартизированный ответ с ошибкой')

export const createConfigApiAdminConfigsPostMutationRequestSchema = z.lazy(() => recommendationConfigSchema).describe('Конфигурация рекомендаций')

export const createConfigApiAdminConfigsPostMutationResponseSchema = z.union([
  z.lazy(() => createConfigApiAdminConfigsPost200Schema),
  z.lazy(() => createConfigApiAdminConfigsPost201Schema),
])